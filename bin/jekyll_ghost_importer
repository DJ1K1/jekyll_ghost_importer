#!/usr/bin/env ruby

require 'fileutils'
require 'json'
require 'date'
require 'yaml'

FileUtils.mkdir_p("_posts")
FileUtils.mkdir_p("_drafts")

@json = JSON.parse File.read(ARGV.pop), symbolize_names: true

unless @json[:data].nil?
  posts = @json[:data][:posts]
else
  posts = @json[:db].first[:data][:posts]
end

def there_are_tags?
  @tags ||=
    @json[:db] &&
    @json[:db].first[:data][:posts_tags] &&
    @json[:db].first[:data][:tags]
end

def tags_for post
  if there_are_tags?
    post_tags = @json[:db].first[:data][:posts_tags].select do |pt|
      pt[:post_id] == post[:id]
    end
    tags_ids = post_tags.map { |pt| pt[:tag_id] }
    tags = @json[:db].first[:data][:tags].select do |t|
      tags_ids.include? t[:id]
    end
    tags.map { |t| t[:slug] }
  end
end

@imported = Hash.new(0)

posts.each do |post|
  date = case post[:published_at]
         when String
           DateTime.parse(post[:published_at])
         when Integer
           Time.at(post[:published_at] / 1000).utc.to_datetime
         end
  slug = post[:slug]
  front_matter_hash = {
    'layout' => "post",
    'title'  => post[:title]
  }
  front_matter_hash['date'] = date.strftime('%Y-%m-%d %H:%M:%S') if date
  tags = tags_for post
  front_matter_hash['tags'] = tags if tags

  body = front_matter_hash.to_yaml + "---\n\n" + post[:markdown]
  draft = post[:status] == 'draft'
  basename = if draft
               "#{ slug }.markdown"
             else
               "#{ date.strftime('%Y-%m-%d') }-#{ slug }.markdown"
             end
  folder = draft ? '_drafts' : '_posts'
  filename = File.join folder, basename
  puts "Importing #{ filename }"
  File.write filename, body
  @imported[:posts] += 1
  @imported[:drafts] += 1 if draft
end

puts "#{ @imported[:posts] } posts imported ( #{ @imported[:drafts] } draft )"
